// for syntax highlighting we use proto3 version
syntax="proto3";

// path to our current folder, where the generated files will be placed
option go_package = "./proto";

// package name for our proto file
package jobs_service;

// defining all the Services for the gRPC
service JobService {
    // simple RPC
    rpc ReturnJobList(NoParam) returns (JobListResponse);

    // bidirectional streaming RPC
    rpc JobsBiStreaming(stream JobsRequest) returns (stream JobsResponse);
}

// when you are not passing any params still you will need to add a type
// NoParam acts as a type for no parameters given.
message NoParam {};

message Job {
  string id = 1;
  string title = 2;
  string description = 3;
  string company = 4;
  string location = 5;
  string employment_type = 6;
  string salary = 7;
  string requirements = 8;
  string responsibilities = 9;
  string contact_information = 10;
  string application_process = 11;
}

message JobsRequest {
  Job message = 1;
}

message JobsResponse {
    string message = 1;
}

// Option 1 is a stream, it means you are returning an iterator and that means you can start processing the Items on client even 
// before the server has finished sending all of them.

// Option 2 is a response object which contains a list of your Items. You can add some other properties to your ItemResponse 
// (some metadata etc)

message JobListResponse {
  repeated Job jobs = 1;
}